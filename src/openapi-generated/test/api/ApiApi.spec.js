/**
 * 
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.OpenapiJsClient);
  }
}(this, function(expect, OpenapiJsClient) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new OpenapiJsClient.ApiApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ApiApi', function() {
    describe('createAlbum', function() {
      it('should call createAlbum successfully', function(done) {
        //uncomment below and update the code to test createAlbum
        //instance.createAlbum(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createAlbumReview', function() {
      it('should call createAlbumReview successfully', function(done) {
        //uncomment below and update the code to test createAlbumReview
        //instance.createAlbumReview(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createArtist', function() {
      it('should call createArtist successfully', function(done) {
        //uncomment below and update the code to test createArtist
        //instance.createArtist(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createArtistBandMembership', function() {
      it('should call createArtistBandMembership successfully', function(done) {
        //uncomment below and update the code to test createArtistBandMembership
        //instance.createArtistBandMembership(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createBand', function() {
      it('should call createBand successfully', function(done) {
        //uncomment below and update the code to test createBand
        //instance.createBand(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('destroyAlbum', function() {
      it('should call destroyAlbum successfully', function(done) {
        //uncomment below and update the code to test destroyAlbum
        //instance.destroyAlbum(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('destroyAlbumReview', function() {
      it('should call destroyAlbumReview successfully', function(done) {
        //uncomment below and update the code to test destroyAlbumReview
        //instance.destroyAlbumReview(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('destroyArtist', function() {
      it('should call destroyArtist successfully', function(done) {
        //uncomment below and update the code to test destroyArtist
        //instance.destroyArtist(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('destroyArtistBandMembership', function() {
      it('should call destroyArtistBandMembership successfully', function(done) {
        //uncomment below and update the code to test destroyArtistBandMembership
        //instance.destroyArtistBandMembership(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('destroyBand', function() {
      it('should call destroyBand successfully', function(done) {
        //uncomment below and update the code to test destroyBand
        //instance.destroyBand(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listAlbumReviews', function() {
      it('should call listAlbumReviews successfully', function(done) {
        //uncomment below and update the code to test listAlbumReviews
        //instance.listAlbumReviews(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listAlbums', function() {
      it('should call listAlbums successfully', function(done) {
        //uncomment below and update the code to test listAlbums
        //instance.listAlbums(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listArtistBandMemberships', function() {
      it('should call listArtistBandMemberships successfully', function(done) {
        //uncomment below and update the code to test listArtistBandMemberships
        //instance.listArtistBandMemberships(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listArtists', function() {
      it('should call listArtists successfully', function(done) {
        //uncomment below and update the code to test listArtists
        //instance.listArtists(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listBands', function() {
      it('should call listBands successfully', function(done) {
        //uncomment below and update the code to test listBands
        //instance.listBands(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listUsers', function() {
      it('should call listUsers successfully', function(done) {
        //uncomment below and update the code to test listUsers
        //instance.listUsers(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('partialUpdateAlbum', function() {
      it('should call partialUpdateAlbum successfully', function(done) {
        //uncomment below and update the code to test partialUpdateAlbum
        //instance.partialUpdateAlbum(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('partialUpdateAlbumReview', function() {
      it('should call partialUpdateAlbumReview successfully', function(done) {
        //uncomment below and update the code to test partialUpdateAlbumReview
        //instance.partialUpdateAlbumReview(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('partialUpdateArtist', function() {
      it('should call partialUpdateArtist successfully', function(done) {
        //uncomment below and update the code to test partialUpdateArtist
        //instance.partialUpdateArtist(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('partialUpdateArtistBandMembership', function() {
      it('should call partialUpdateArtistBandMembership successfully', function(done) {
        //uncomment below and update the code to test partialUpdateArtistBandMembership
        //instance.partialUpdateArtistBandMembership(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('partialUpdateBand', function() {
      it('should call partialUpdateBand successfully', function(done) {
        //uncomment below and update the code to test partialUpdateBand
        //instance.partialUpdateBand(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('retrieveAlbum', function() {
      it('should call retrieveAlbum successfully', function(done) {
        //uncomment below and update the code to test retrieveAlbum
        //instance.retrieveAlbum(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('retrieveAlbumReview', function() {
      it('should call retrieveAlbumReview successfully', function(done) {
        //uncomment below and update the code to test retrieveAlbumReview
        //instance.retrieveAlbumReview(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('retrieveArtist', function() {
      it('should call retrieveArtist successfully', function(done) {
        //uncomment below and update the code to test retrieveArtist
        //instance.retrieveArtist(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('retrieveArtistBandMembership', function() {
      it('should call retrieveArtistBandMembership successfully', function(done) {
        //uncomment below and update the code to test retrieveArtistBandMembership
        //instance.retrieveArtistBandMembership(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('retrieveBand', function() {
      it('should call retrieveBand successfully', function(done) {
        //uncomment below and update the code to test retrieveBand
        //instance.retrieveBand(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('retrieveCurrentUser', function() {
      it('should call retrieveCurrentUser successfully', function(done) {
        //uncomment below and update the code to test retrieveCurrentUser
        //instance.retrieveCurrentUser(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('retrieveUser', function() {
      it('should call retrieveUser successfully', function(done) {
        //uncomment below and update the code to test retrieveUser
        //instance.retrieveUser(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateAlbum', function() {
      it('should call updateAlbum successfully', function(done) {
        //uncomment below and update the code to test updateAlbum
        //instance.updateAlbum(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateAlbumReview', function() {
      it('should call updateAlbumReview successfully', function(done) {
        //uncomment below and update the code to test updateAlbumReview
        //instance.updateAlbumReview(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateArtist', function() {
      it('should call updateArtist successfully', function(done) {
        //uncomment below and update the code to test updateArtist
        //instance.updateArtist(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateArtistBandMembership', function() {
      it('should call updateArtistBandMembership successfully', function(done) {
        //uncomment below and update the code to test updateArtistBandMembership
        //instance.updateArtistBandMembership(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateBand', function() {
      it('should call updateBand successfully', function(done) {
        //uncomment below and update the code to test updateBand
        //instance.updateBand(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
